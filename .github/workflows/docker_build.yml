name: Build Docker Images and Release

on:
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: spiritlhl

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile_alpine
            tag_suffix: alpine
          - dockerfile: Dockerfile_ubuntu
            tag_suffix: ubuntu
          - dockerfile: Dockerfile_debian
            tag_suffix: debian
          - dockerfile: Dockerfile_almalinux
            tag_suffix: almalinux
          - dockerfile: Dockerfile_rockylinux
            tag_suffix: rockylinux
          - dockerfile: Dockerfile_openeuler
            tag_suffix: openeuler

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build \
          -f dockerfiles/${{ matrix.dockerfile }} \
          -t ${{ env.IMAGE_NAME }}:${{ matrix.tag_suffix }} \
          .

    - name: Save Docker image as tar
      run: |
        docker save ${{ env.IMAGE_NAME }}:${{ matrix.tag_suffix }} | gzip > ${{ env.IMAGE_NAME }}-${{ matrix.tag_suffix }}.tar.gz
        ls -lh *.tar.gz

    - name: Create GitHub Release
      run: |
        TAG=${{ matrix.tag_suffix }}
        FILENAME=${{ env.IMAGE_NAME }}-${{ matrix.tag_suffix }}.tar.gz

        # Delete tag and release if already exist
        if gh release view "$TAG" >/dev/null 2>&1; then
          echo "Release $TAG already exists. Deleting it..."
          gh release delete "$TAG" -y
          git push origin --delete "$TAG" || true
        fi

        # Create tag
        git tag "$TAG"
        git push origin "$TAG"

        # Create release
        gh release create "$TAG" "$FILENAME" \
          --title "$TAG" \
          --notes "Docker image for $TAG system." \
          --prerelease=false \
          --draft=false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
